WITH S AS(
SELECT *, LAG(CONTRACT_TYPE) OVER(ORDER BY ID,DATES,CONTRACT_TYPE) AS PREV FROM CHALLENGE 
),
A AS(
SELECT	*,SUM(CASE WHEN CONTRACT_TYPE = prev THEN 0 ELSE 1 END) OVER(ORDER BY ID,DATES,CONTRACT_TYPE) as ROW_N
FROM S
),
B AS (
SELECT *,
COUNT(*) OVER (PARTITION BY ROW_N) AS COUNT_N
FROM A),
C AS (
SELECT id,
CASE WHEN COUNT_N >= 1 THEN MIN(dates) OVER(PARTITION BY ROW_N) ELSE NULL END AS STRT_DATE,
--CASE WHEN COUNT_N > 1 THEN MAX(dates)OVER(PARTITION BY ROW_N) ELSE NULL END AS END_DATE,
CASE WHEN LEAD(ID) OVER(ORDER BY ID,DATES,CONTRACT_TYPE) = ID 
	 THEN
         CASE WHEN LEAD(CONTRACT_TYPE)OVER(ORDER BY ID,DATES,CONTRACT_TYPE) != CONTRACT_TYPE  
			 THEN LEAD(DATES) OVER(ORDER BY ID,DATES,CONTRACT_TYPE) 
			 ELSE NULL
			END
	  ELSE NULL
	 END AS END_DATE,
contract_type,ROW_N ,COUNT_N
FROM B ) 
SELECT MAX(id) as ID ,MAX(strt_date) AS STRT_DATE,MAX(end_date) AS END_DATE, MAX(contract_type) AS CONTRACT_TYPE FROM c group by ROW_N;





use demo;
create table challenge (id int, dates date, contract_type varchar(50));
select * from challenge;
DROP TABLE challenge
insert into challenge values

(10,'10/12/2018','DEEMED'),
insert into challenge values
(11,'12/12/2004','TARIFF'),
(11,'12/21/2018','CONTRACT'),
(11,'1/21/2019','DEEMED'),
(11,'10/10/2019','CONTRACT'),
(11,'12/12/2020','DEEMED');

SUM = 0
IF CONCAT= PREV:
   SUM + = 0
ELSE 
   SUM + = 1

